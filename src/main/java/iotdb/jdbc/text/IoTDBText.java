package iotdb.jdbc.text;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;

public class IoTDBText {

  public static void main(String[] args) throws Exception {
    Class.forName("org.apache.iotdb.jdbc.IoTDBDriver");
    Connection connection = null;
    Statement statement = null;
    Statement statement1 = null;
    try {
      connection = DriverManager.getConnection("jdbc:iotdb://127.0.0.1:6667/", "root", "root");
      statement = connection.createStatement();
      statement1 = connection.createStatement();
      long totalTime = 0;
      for (int i = 1; i < 108000; i++) {
        long startTime = System.currentTimeMillis();
        statement.execute("insert into root.fit.d1(timestamp,s1) values(" + i
            + ",\"000105dc130703081c1f00001b6300001b6400001b6500001b6600001b6700001b680dc0150001000100020002000700070c050401010a000000000000000063000000000000008800034803480348000148db00013e700048f8640011ac7e0025d76c00fc000c041a0004f2b7000114fb0001326700013f78000151eb196400002b190200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000fcffffffffffffffffffffffffffff3f00c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c003000c0000003000c00300001000200010002000100020001000200010002000100020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004b4b4b4b646464643c3c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000045044f0f00c0000000000000000000000000000000000000000000000000000000000000000000000000000000000000090009000900090f3a163a9e3a803a740f16e0168c16a616b50f1c8e1c931c921c910f197c198d199b199c9f000025002500250025ffedffedffedffed00000000000000000000000000000000000000000000000000000000000000000000000000000009000900090009ff033afd3b1d3b283b10006b006c006d006c00330031003300340f0eea0efe0ee10ee80439043bffecfff2090b6f0af3f500000900090009000900000000000000000000000000000000000000000000000000000000000000000000440c1c1c13191e1affc0ffffff0f00000000f0ff41784178408840883ffc3ffc3f983f983f983f983f843f84ff0f000000000000000000000000000000000000000000000000ff0f000000000000000000000000000000000000000000000000ff0f1e1e1e1e19a019a01806180618d818d81ba81ba81e5a1e5aff0f1a681a681a901a90186a186a19501950198c198c19c819c80f418c418c409c409c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000989c9da09e9c98969596979600983f060606060606929448920400000000f0f0f0f0f0f0606060605060f0f0f0f0f0f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003af23afafdffffff555555555555555555555555555555cf0100000000000000000000000000000000000000000000000000010300010001000100010103002b002b002b002b0000000000040003000000000004000300000000000400030000000000040003030e030e030e030eb01084b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002019e
        long endTime = System.currentTimeMillis();
        totalTime += endTime - startTime;
        long time_interval = endTime - startTime;
//        statement1.execute("SELECT count(s1) FROM root.fit.d1");
//        ResultSet resultSet = statement1.getResultSet();
//        while (resultSet.next()) {
//          if (Long.valueOf(resultSet.getString(2)) != i) {
//            System.out.println(i);
//            System.exit(0);
//          }
//        }
        if (i % 1000 == 0) {
          System.out.println(
              String.format("插入了%s条数据,总耗时为%s,当前速率为%s，平均速率为%s", i, totalTime, (double)1000 / time_interval * 1000,(double)i / totalTime * 1000));
        }
      }
//      ResultSet resultSet = statement.getResultSet();
//      while(resultSet.next()){
//        System.out.println(String.format("timestamp %s, value %s", resultSet.getString(1), resultSet.getString(2)));
//      }
    } finally {
      if (statement != null) {
        statement.close();
      }
      if (connection != null) {
        connection.close();
      }
    }
  }

}
